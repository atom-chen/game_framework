{
  "code": "import * as tslib_1 from \"tslib\";\r\nimport AnimationManager from \"../../../manager/AnimationManager\";\r\nimport SoundManager from \"../../../common/SoundManager\";\r\nimport GameHomeView from \"../../GameHomeView\";\r\nimport ViewChangeManager from \"../../../games/ViewChangeManager\";\r\nimport GameStateManager from \"../../../games/GameStateManager\";\r\nimport { EnterGameType } from \"../../../games/CommonDefine\";\r\nimport SuccessfulEntryThreeView from \"../SuccessfulEntryThreeView\";\r\nimport { PlayerDataManager } from \"../../../common/GameDataManager\";\r\nimport GameView from \"../../GameView\";\r\nimport { LevelManager } from \"../../../manager/LevelManager\";\r\nimport FailEntryOneView from \"../FailEntryOneView\";\r\nimport ConfigManager from \"../../../games/ConfigManager\";\r\nimport SuccessfulEntryOneView from \"../SuccessfulEntryOneView\";\r\nimport { MiniManeger } from \"../../../minigame/MiniManeger\";\r\nimport GameLogicProcessingManager from \"../../../games/GameLogicProcessingManager\";\r\nimport ShareRecordVideoView from \"../ShareRecordVideoView\";\r\nimport VentonesangerView from \"../VentonesangerView\";\r\nimport MoreGameView from \"../wecat/MoreGameView\";\r\nimport MoreGameRandomGameBox713Temp from \"../wecat/MoreGameRandomGameBox713Temp\";\r\nvar LevelBase = (function (_super) {\r\n    tslib_1.__extends(LevelBase, _super);\r\n    function LevelBase(data_) {\r\n        var _this = _super.call(this, data_) || this;\r\n        _this.className_key = \"LevelScene\";\r\n        _this.bAniDestory = false;\r\n        _this.isLoadStatusOk = false;\r\n        _this.index = 0;\r\n        _this.showLabelObj = {};\r\n        _this.showSoundObj = {};\r\n        _this.aniArr = [];\r\n        _this.localAniName = null;\r\n        _this.urlArr = {};\r\n        _this.localData = null;\r\n        _this.isPop = false;\r\n        _this.mapData = _this.viewData_ = data_;\r\n        return _this;\r\n    }\r\n    LevelBase.prototype.onAddStage = function () {\r\n        _super.prototype.onAddStage.call(this);\r\n    };\r\n    LevelBase.prototype.childrenCreated = function () {\r\n        this.createLabelIcon();\r\n        this.initView();\r\n        this.addEvent();\r\n    };\r\n    LevelBase.prototype.initPlayerStatus = function () {\r\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\r\n            var ani_player;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.mapData.player.status) return [3, 2];\r\n                        this.isLoadStatusOk = false;\r\n                        return [4, this.createSkeleton(this.mapData.player.url, true)];\r\n                    case 1:\r\n                        ani_player = _a.sent();\r\n                        if (ani_player == null) {\r\n                            return [2];\r\n                        }\r\n                        (!this.ani_player) && (this.ani_player = ani_player);\r\n                        if (!this.ani_player.parent && !this.box_player.getChildByName(\"ani_player\")) {\r\n                            this.box_player.addChild(this.ani_player);\r\n                            this.isLoadStatusOk = true;\r\n                            this.ani_player.name = \"ani_player\";\r\n                            this.ani_player.x = this.mapData.player.status.x;\r\n                            this.ani_player.y = this.mapData.player.status.y;\r\n                            this.ani_player.play(this.mapData.player.status.aniN, this.mapData.player.status.loop);\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    LevelBase.prototype.createLabelIcon = function () {\r\n        var skin = 'resource/assets/img/ui/game/gameinterface_baseboard_8.png';\r\n        this.icon_showLabel = new Laya.Image();\r\n        this.icon_showLabel.skin = skin;\r\n        this.icon_showLabel.visible = false;\r\n        this.lableValue = new Laya.Label();\r\n        this.lableValue.centerX = 0;\r\n        this.lableValue.centerY = -25;\r\n        this.lableValue.fontSize = 30;\r\n        this.lableValue.wordWrap = true;\r\n        this.lableValue.width = 250;\r\n        this.icon_showLabel.addChild(this.lableValue);\r\n        this.boxDialog.addChild(this.icon_showLabel);\r\n    };\r\n    LevelBase.prototype.setData = function (data) {\r\n        this.viewData_ = data;\r\n        this.mapData = data;\r\n    };\r\n    LevelBase.prototype.initView = function () {\r\n        this.bReturbToHome = false;\r\n        this.index = 0;\r\n        this.box_player.x = (this.index) * 1080;\r\n        this.box_game.x = (this.index) * -1080;\r\n        this.showSoundObj = [];\r\n        if (this.pGameView) {\r\n            this.pGameView.removeSelf();\r\n        }\r\n        this.pGameView = null;\r\n        this.box_player.removeChildren();\r\n        this.box_enb.removeChildren();\r\n        this.destroyAni();\r\n        ViewChangeManager.getInstance().CurLevelBase = this;\r\n        this.refreshViewInLevel();\r\n        this.bAniDestory = false;\r\n    };\r\n    LevelBase.prototype.playAni = function (aniName, callBack, isLoop) {\r\n        if (isLoop === void 0) { isLoop = false; }\r\n        console.log(\"aniName>>>>>>>>>>>>\", aniName, \"curtime = \", GameLogicProcessingManager.GetCurTime());\r\n        this.localAniName = aniName;\r\n        if (this.ani_player != null) {\r\n            this.ani_player.visible = true;\r\n            if (callBack && this.ani_player.player) {\r\n                this.ani_player.player.off(Laya.Event.STOPPED, this, this.onComplete);\r\n                this.ani_player.player.once(Laya.Event.STOPPED, this, this.onComplete, [aniName, callBack]);\r\n            }\r\n            this.ani_player.play(aniName, isLoop, true);\r\n        }\r\n        else {\r\n            callBack && callBack(aniName);\r\n        }\r\n    };\r\n    LevelBase.prototype.onComplete = function (aniName, callBack) {\r\n        console.log(\"onComplete aniName =\", aniName, \"curtime = \", GameLogicProcessingManager.GetCurTime());\r\n        callBack && callBack(aniName);\r\n    };\r\n    LevelBase.prototype.createSkeleton = function (url, status) {\r\n        var _this = this;\r\n        if (status === void 0) { status = false; }\r\n        return new Promise(function (resolve) {\r\n            console.log(\"创建龙骨动画-->\" + url);\r\n            if (!status) {\r\n                _this.urlArr[url] = \"0\";\r\n            }\r\n            AnimationManager.instance.showSkeletonAnimation(url, function (boomAnimation) {\r\n                if (boomAnimation == null) {\r\n                    if (_this.urlArr[url] == \"0\" && status) {\r\n                        resolve(null);\r\n                    }\r\n                    else {\r\n                        resolve(_this.createSkeleton(url, status));\r\n                    }\r\n                    return;\r\n                }\r\n                boomAnimation.player.playbackRate = 1;\r\n                boomAnimation.autoSize = true;\r\n                boomAnimation.scale(1, 1);\r\n                _this.aniArr.push(boomAnimation);\r\n                if (status && _this.urlArr[url] == \"0\") {\r\n                    console.log(\" this.urlArr>>>>>>>>>>\", _this.urlArr);\r\n                    resolve(null);\r\n                    return;\r\n                }\r\n                resolve(boomAnimation);\r\n            }, 1);\r\n        });\r\n    };\r\n    LevelBase.prototype.onPlayOnce = function () {\r\n        var _this = this;\r\n        this.localData = this.mapData.player.ani[this.localAniName];\r\n        if (this.localData) {\r\n            if (this.localData.pop) {\r\n                if (this.localData.popTime && this.localData.popTime > 1) {\r\n                    var playTime_1 = 1;\r\n                    var self_1 = this;\r\n                    var platEndCall_1 = function (aniName) {\r\n                        playTime_1++;\r\n                        if (playTime_1 >= self_1.localData.popTime) {\r\n                            if (!self_1.isPop) {\r\n                                self_1.popChoose();\r\n                            }\r\n                            self_1.playAni(self_1.localData.aniName, function () {\r\n                            }, true);\r\n                        }\r\n                        else {\r\n                            self_1.playAni(self_1.localData.aniName, platEndCall_1);\r\n                        }\r\n                    };\r\n                    this.playAni(this.localData.aniName, platEndCall_1);\r\n                }\r\n                else {\r\n                    if (!this.isPop) {\r\n                        this.popChoose();\r\n                    }\r\n                    if (this.localData.loop) {\r\n                        this.playAni(this.localData.aniName, function () {\r\n                        }, true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (this.localData.isWin == 1) {\r\n                    this.onSuccess();\r\n                    return;\r\n                }\r\n                else if (this.localData.isWin == 2) {\r\n                    this.pGameView.showResultIcon(false);\r\n                    Laya.timer.once(1000, this, function () {\r\n                        _this.onFail();\r\n                    });\r\n                    return;\r\n                }\r\n                if (this.localData.next) {\r\n                    this.playAni(this.localData.next, function () {\r\n                        _this.onPlayOnce();\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LevelBase.prototype.popChoose = function () {\r\n        this.isPop = true;\r\n        console.log(\"int pop choose!\");\r\n        if (!this.pGameView) {\r\n            return;\r\n        }\r\n        var self = this;\r\n        this.pGameView.showChoseView({\r\n            data: this.mapData.player.choose[this.index], callBack: function (right, aniName) {\r\n                self.callBack(right, aniName);\r\n            }\r\n        });\r\n    };\r\n    LevelBase.prototype.onStart = function () {\r\n        var _this = this;\r\n        var start = this.mapData.player.start;\r\n        this.localData = this.mapData.player.ani[start[this.index]];\r\n        console.log(\"11111 this.index = \", this.index, \"this.localData = \", this.localData);\r\n        var bFlag = false;\r\n        this.playAni(this.localData.aniName, function () {\r\n            _this.onPlayOnce();\r\n        }, bFlag);\r\n    };\r\n    LevelBase.prototype.callBack = function (right, aniName) {\r\n        var _this = this;\r\n        if (right) {\r\n            if (this.index < this.mapData.player.choose.length) {\r\n                this.index++;\r\n            }\r\n            this.pGameView.refreshUpIndeInfo(this.index, this.mapData.player.choose.length);\r\n            this.pGameView.showResultIcon(right);\r\n        }\r\n        else { }\r\n        this.playAni(aniName, function () {\r\n            _this.onPlayOnce();\r\n        });\r\n    };\r\n    LevelBase.prototype.onPlayLabel = function (evt) {\r\n        if (this.bAniDestory)\r\n            return;\r\n        if (evt.name != 'undefined' && evt.name) {\r\n            console.log(evt.name);\r\n            if (evt.name.indexOf('sound') > -1) {\r\n                var soundArr = evt.name.split('_');\r\n                var count = soundArr[2];\r\n                var soundName = soundArr[1];\r\n                var index = null;\r\n                var soundObj = this.showSoundObj[this.localAniName];\r\n                if (soundObj == null) {\r\n                    soundObj = {};\r\n                    index = 1;\r\n                    if (Number(count) == 0) {\r\n                        (count) = 1 + '';\r\n                    }\r\n                }\r\n                else {\r\n                    index = soundObj[soundName];\r\n                    if (index == null) {\r\n                        index = 1;\r\n                        if (Number(count) == 0) {\r\n                            (count) = 1 + '';\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (Number(count) == 0 || soundName == \"1015b\") {\r\n                            (count) = 1 + '';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                soundObj[soundName] = index;\r\n                this.showSoundObj[this.localAniName] = soundObj;\r\n                console.log('播放声音', count, soundName);\r\n                SoundManager.getInstance().playEffect(soundName, Number(count));\r\n            }\r\n            else if (evt.name.indexOf('show') > -1) {\r\n                var showArr = evt.name.split(\"_\");\r\n                var id = showArr[1];\r\n                if (!this.showLabelObj[id]) {\r\n                    this.showLabelObj[id] = true;\r\n                    this.showLabelView(parseInt(id));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    LevelBase.prototype.showLabelView = function (id) {\r\n        var self = this;\r\n        if (self.icon_showLabel) {\r\n            Laya.timer.clearAll(self.icon_showLabel);\r\n            var stAnyData = ConfigManager.getInstance().getDialogInfo(id);\r\n            if (stAnyData) {\r\n                if (stAnyData.nR == 1) {\r\n                    self.icon_showLabel.scaleX = -1;\r\n                    self.lableValue.scaleX = -1;\r\n                }\r\n                else {\r\n                    self.icon_showLabel.scaleX = 1;\r\n                    self.lableValue.scaleX = 1;\r\n                }\r\n                self.icon_showLabel.x = stAnyData.nX;\r\n                self.icon_showLabel.y = stAnyData.nY;\r\n                console.log(\"len = \", stAnyData.desc.length);\r\n                var nWith = stAnyData.desc.length * 30;\r\n                if (nWith > 250) {\r\n                    nWith = 250;\r\n                }\r\n                self.lableValue.width = nWith;\r\n                self.lableValue.text = stAnyData.desc;\r\n                self.icon_showLabel.visible = true;\r\n                Laya.timer.once(1000, self.icon_showLabel, function (icon_showLabel) {\r\n                    icon_showLabel.visible = false;\r\n                }, [self.icon_showLabel]);\r\n            }\r\n        }\r\n    };\r\n    LevelBase.prototype.destroyAni = function () {\r\n        this.bAniDestory = true;\r\n        var aniArr = this.aniArr;\r\n        var len = aniArr.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var ani = aniArr[i];\r\n            if (ani) {\r\n                Laya.loader.clearRes(ani.url);\r\n                ani.stop();\r\n                ani.removeSelf();\r\n                ani.destroy(true);\r\n            }\r\n            ani = null;\r\n        }\r\n        this.aniArr = [];\r\n        this.showLabelObj = {};\r\n        this.ani_player = null;\r\n    };\r\n    LevelBase.prototype.addEvent = function () { };\r\n    LevelBase.prototype.removeEvent = function () { };\r\n    LevelBase.prototype.removeSelf = function () {\r\n        this.urlArr = {};\r\n        return _super.prototype.removeSelf.call(this);\r\n    };\r\n    LevelBase.prototype.onRemoved = function () {\r\n        _super.prototype.onRemoved.call(this);\r\n        this.removeEvent();\r\n        this.destroyAni();\r\n        this.urlArr = {};\r\n    };\r\n    LevelBase.prototype.showGameHome = function () {\r\n        this.initPlayerStatus();\r\n        ViewManager.getInstance().showView(GameHomeView);\r\n    };\r\n    LevelBase.prototype.showGameView = function () { };\r\n    LevelBase.prototype.startGame = function () {\r\n        MiniManeger.instance.hideBlockAd();\r\n        this.urlArr = {};\r\n        ViewChangeManager.getInstance().CommonView.removeBtEvent();\r\n        MiniManeger.instance.StartRecorderVideo();\r\n        this.bReturbToHome = false;\r\n        this.pGameView = ViewManager.getInstance().showView(GameView);\r\n        this.pGameView.startVideoImage();\r\n        this.pGameView.refreshChoose();\r\n        this.pGameView.refreshUpIndeInfo(this.index, this.mapData.player.choose.length);\r\n        if (!PlayerDataManager.getInstance().checkDyLogIndexrecorded(PlayerDataManager.getInstance().getCurLevelToChallenge())) {\r\n            ViewChangeManager.getInstance().startGame();\r\n        }\r\n    };\r\n    LevelBase.prototype.stopGame = function () { };\r\n    LevelBase.prototype.restartGame = function (bReStartAll) {\r\n        if (bReStartAll === void 0) { bReStartAll = true; }\r\n        MiniManeger.instance.StartRecorderVideo();\r\n        this.bReturbToHome = false;\r\n        this.showSoundObj = [];\r\n        this.showLabelObj = [];\r\n        if (this.pGameView) {\r\n            this.pGameView.startVideoImage();\r\n            this.pGameView.hideChoseView();\r\n            this.pGameView.refreshChoose();\r\n            this.pGameView.refreshUpIndeInfo(this.index, this.mapData.player.choose.length);\r\n        }\r\n        else {\r\n            console.error(\"can not find pGameView!\");\r\n        }\r\n    };\r\n    LevelBase.prototype.returnToGameHome = function () {\r\n        MiniManeger.instance.StopVideo();\r\n        this.bReturbToHome = true;\r\n        this.destroyAni();\r\n        this.initPlayerStatus();\r\n        if (this.icon_showLabel) {\r\n            this.icon_showLabel.visible = false;\r\n        }\r\n        if (PlayerDataManager.getInstance().getCurLevelToChallenge() == PlayerDataManager.getInstance().getLevelToChangeMaxLevel()) {\r\n            this.initView();\r\n        }\r\n        else {\r\n            if (this.pGameView) {\r\n                this.pGameView.removeSelf();\r\n            }\r\n            this.pGameView = null;\r\n            GameStateManager.getInstance().levelState = EnterGameType.enum_EnterGameType_GameHome;\r\n            LevelManager.getInstance().createLevelScene(PlayerDataManager.getInstance().getLevelToChangeMaxLevel());\r\n        }\r\n    };\r\n    LevelBase.prototype.clearData = function () {\r\n        this.box_player.removeChildren();\r\n    };\r\n    LevelBase.prototype.onSuccess = function () {\r\n        if (DeviceUtil.isTTMiniGame()) {\r\n            MiniManeger.instance.saveCallF = function () {\r\n                if (MiniManeger.instance.strVideoPatch && MiniManeger.instance.strVideoPatch != \"\") {\r\n                    ViewChangeManager.getInstance().showBufferLoadingView();\r\n                    ResUtil.getIntance().loadGroups([\"share\"], function () {\r\n                        ViewChangeManager.getInstance().hideBufferLoadingView();\r\n                        ViewManager.getInstance().showView(ShareRecordVideoView);\r\n                    });\r\n                }\r\n                else {\r\n                    if (BaseConst.infos.gameInfo.openPsAward == 1 && ConfigManager.getInstance().getTreasureByCurLevel() == 1) {\r\n                        ViewManager.getInstance().showView(SuccessfulEntryOneView);\r\n                    }\r\n                    else {\r\n                        ViewManager.getInstance().showView(SuccessfulEntryThreeView);\r\n                    }\r\n                }\r\n                MiniManeger.instance.saveCallF = null;\r\n            };\r\n        }\r\n        MiniManeger.instance.StopVideo();\r\n        if (this.bReturbToHome) {\r\n            return;\r\n        }\r\n        console.log(\"Level Success!\");\r\n        if (DeviceUtil.isQQMiniGame()) {\r\n            if (DeviceUtil.isQQMiniGame() && ConfigManager.getInstance().getTreasureByCurLevel() == 1) {\r\n                if (Math.random() < BaseConst.infos.gameInfo.boxWDJ) {\r\n                    ViewManager.getInstance().showView(SuccessfulEntryOneView);\r\n                }\r\n                else {\r\n                    ViewManager.getInstance().showView(SuccessfulEntryThreeView);\r\n                }\r\n            }\r\n            else {\r\n                if (Math.random() < BaseConst.infos.gameInfo.boxWDJ) {\r\n                    ViewManager.getInstance().showView(VentonesangerView);\r\n                }\r\n                else {\r\n                    ViewManager.getInstance().showView(SuccessfulEntryThreeView);\r\n                }\r\n            }\r\n        }\r\n        else if (DeviceUtil.isTTMiniGame()) {\r\n            if (MiniManeger.instance.nRecordTimeReal >= MiniManeger.instance.nRecordTime * 1000) {\r\n                MiniManeger.instance.saveCallF && MiniManeger.instance.saveCallF();\r\n            }\r\n        }\r\n        else {\r\n            if (!DeviceUtil.isWXMiniGame()) {\r\n                if (BaseConst.infos.gameInfo.openPsAward == 1 && ConfigManager.getInstance().getTreasureByCurLevel() == 1) {\r\n                    ViewManager.getInstance().showView(SuccessfulEntryOneView);\r\n                }\r\n                else {\r\n                    ViewManager.getInstance().showView(SuccessfulEntryThreeView);\r\n                }\r\n            }\r\n            else {\r\n                this.weCatSpecialSettleMent();\r\n            }\r\n        }\r\n        if (!PlayerDataManager.getInstance().checkDyLogIndexrecorded(PlayerDataManager.getInstance().getCurLevelToChallenge())) {\r\n            ViewChangeManager.getInstance().endGame();\r\n            PlayerDataManager.getInstance().recordDyLogIndex(PlayerDataManager.getInstance().getCurLevelToChallenge());\r\n        }\r\n    };\r\n    LevelBase.prototype.weCatSpecialSettleMent = function () {\r\n        if (!DeviceUtil.isWXMiniGame()) {\r\n            return;\r\n        }\r\n        if (LevelManager.getInstance().nCurLevel >= 3) {\r\n            if (PlayerDataManager.getInstance().checkIsSpecial() && BaseConst.infos.gameInfo.MoreGameView == 1) {\r\n                MoreGameView.bSuccess = true;\r\n                ViewManager.getInstance().showView(MoreGameView);\r\n            }\r\n            else {\r\n                MoreGameRandomGameBox713Temp.bSuccess = true;\r\n                ViewManager.getInstance().showView(MoreGameRandomGameBox713Temp);\r\n            }\r\n        }\r\n        else {\r\n            ViewManager.getInstance().showView(SuccessfulEntryThreeView);\r\n        }\r\n        this.pGameView.closeWeCatMoreGameView();\r\n    };\r\n    LevelBase.prototype.onFail = function () {\r\n        MiniManeger.instance.StopVideo();\r\n        if (this.bReturbToHome) {\r\n            return;\r\n        }\r\n        console.log(\"Level Fail!\");\r\n        ViewManager.getInstance().showView(FailEntryOneView);\r\n        if (!PlayerDataManager.getInstance().checkDyLogIndexrecorded(PlayerDataManager.getInstance().getCurLevelToChallenge())) {\r\n            ViewChangeManager.getInstance().endGame();\r\n            PlayerDataManager.getInstance().recordDyLogIndex(PlayerDataManager.getInstance().getCurLevelToChallenge());\r\n        }\r\n    };\r\n    LevelBase.prototype.closeGameView = function () {\r\n        if (this.pGameView) {\r\n            this.pGameView.removeSelf();\r\n            this.pGameView = null;\r\n        }\r\n    };\r\n    LevelBase.prototype.refreshViewInLevel = function () {\r\n        var nCurState = GameStateManager.getInstance().levelState;\r\n        if (nCurState == EnterGameType.enum_EnterGameType_GameHome) {\r\n            this.showGameHome();\r\n            if (this.pGameView) {\r\n                this.pGameView.removeSelf();\r\n            }\r\n        }\r\n        else {\r\n            if (nCurState == EnterGameType.enum_EnterGameType_Next\r\n                || nCurState == EnterGameType.enum_EnterGameType_ChooseLevel) {\r\n                this.startGame();\r\n            }\r\n        }\r\n    };\r\n    LevelBase.prototype.getCurChooseInfo = function () {\r\n        return this.mapData.player.choose[this.index];\r\n    };\r\n    LevelBase.prototype.levelOnShow = function () { };\r\n    LevelBase.prototype.levelOnHide = function () { };\r\n    return LevelBase;\r\n}(BaseSceneUISkin));\r\nexport { LevelBase };\r\n",
  "references": [
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/manager/AnimationManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/common/SoundManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/GameHomeView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/games/ViewChangeManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/FailEntryTwoView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/games/GameStateManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/games/CommonDefine.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/SuccessfulEntryThreeView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/common/GameDataManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/GameView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/manager/LevelManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/FailEntryOneView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/games/ConfigManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/SuccessfulEntryOneView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/minigame/MiniManeger.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/games/GameLogicProcessingManager.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/ShareRecordVideoView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/common/GameData.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/VentonesangerView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/wecat/MoreGameView.ts",
    "F:/gitpro/ecy_game_framework/game_framework_ecy/game_framework_ecy/src/script/views/game/wecat/MoreGameRandomGameBox713Temp.ts"
  ]
}
